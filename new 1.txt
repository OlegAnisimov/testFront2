

	$(function (){
	    $('.number-prev').click(function (){
	        inc(this.parentNode,-1)
	    });
	    $('.number-next').click(function (){
	        inc(this.parentNode,1)
	    });
	    function inc(Obj,Val){
	        Obj=$(Obj).find('.valueNumber')
	        var val=parseInt(Obj.text())
	        if (val==0 && Val==-1) {
	            return
	        }
	        Obj.text(val+Val)
	    }
	})
	
	let count = 1
x = $(".stepper-arrow.up")
x.click(function() {
    count += 1 
  sosed = this.previousElementSibling
  console.log(sosed)
  sosed.value = count
})
		
		
		
		let counter = 1
up.click(function x() {    
        let sibling = this.previousElementSibling
  function y() {   
     counter += 1   
     sibling.value = counter
     
  }
  y()
})
})




	

function useCounter() {
    var Count = 1;
 
    return function() {
        return Count++;
    }; 
}
 
var counter = useCounter();
 
function count() {
  console.log(counter());
}




	function useCounter() {
    var Count = 1;
 
    return function() {
        return Count++;
    }; 
}
 
var counter = useCounter();
 
function count() {
  console.log(counter());
}




<button is="click-counter"></button>
<button is="click-counter"></button>
<button is="click-counter"></button>

<style>
[is="click-counter"]::before { content: "Click me! "}
</style>

<script>
class ClickCounter extends HTMLSpanElement {
	constructor() {
		super();
		const clickHandler = this.counterClosure;
		this.addEventListener("click", clickHandler);
		clickHandler();
	}
	
	get counterClosure() {
		let counter = 0;
		return () => this.textContent = counter++;
	}
}
customElements.define("click-counter", ClickCounter, { extends: "span" });
</script>


$(".stepper-arrow.down").click(function() {
  let valMinus = this.previousElementSibling.getAttribute("value");
  this.setAttribute("value", --valMinus);
    })
	
	
	
	
	onchange="x()"

console.log(this.value)


  if ())
      else {
          this.className += " unit--active"
          if (this.previousElementSibling) {
              this.previousElementSibling.classList.remove("unit--active")
          } else  {
              this.nextElementSibling.classList.remove("unit--active")
          }  
      }
	  
	  
	  
	  $(".unit--select").click(function() {
    let mainCondition = this.classList.contains("unit--active")
    if (mainCondition === false)   {
        this.className += " unit--active"
        let conditionPriceGold = this.parentNode.parentNode.nextElementSibling.children[1].classList.contains("price--gold")
        if (conditionPriceGold === false) {
            this.parentNode.parentNode.nextElementSibling.children[1].className += " price--gold"
            this.parentNode.parentNode.nextElementSibling.children[1].innerHTML = priceGold
        } 
        if (conditionPriceGold === true) {
            this.parentNode.parentNode.nextElementSibling.children[1].classList.remove("price--gold") 
            this.parentNode.parentNode.nextElementSibling.children[1].innerHTML = priceGoldAlt
        }
        
        if (this.nextElementSibling != null) {
            this.nextElementSibling.classList.remove("unit--active")
        } else  {
            this.previousElementSibling.classList.remove("unit--active")
        }
    }          
})


<!--<script >-->
<!--$(".unit&#45;&#45;select").click(function() {    -->
<!--    console.log("fff")-->
<!--    // this.classList.add("unit&#45;&#45;active")-->
<!--    this.className += " unit&#45;&#45;active"-->
<!--    this.previousElementSibling.classList.remove("unit&#45;&#45;active")-->
<!--})-->
<!--</script>-->


    // let currentPrice = this.parentNode.parentNode.parentNode.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.children[0].textContent
    // let currentPriceGold = this.parentNode.parentNode.parentNode.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.previousElementSibling.children[1].textContent